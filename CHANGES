BCPLKIT CHANGES


Release 0.9.7

The package has been polished to work better in a 64-bit environment.
MININT should now handled by various components.  A problem with
UNRDCH() has been corrected.  The x86 code generator has been
extensively revised and incorporates various corrections.  The copt
rules have been tweaked.


Release 0.9.6

First general release.  The sys.s file has been revised, and is now
supplied in separate versions for Linux and FreeBSD.  Several pieces
of documentation have been added.  There have also been tweaks to the
build system.


Release 0.9.5

We now look in /usr/local/lib/bcplkit for header files that we don't
find in the current directory.  In addition, various bits of code have
been tidied up.


Release 0.9.4

Various changes have been made to support peephole optimization.
Some other code generations changes have also been made: in particular,
relational operators and shift operators.  The startup code is now linked
in (in object form) rather than assembled as part of the generated code.
The -o option is supported by the front-end.  Writable strings are
now supported.


Release 0.9.3

Improvements in the generation of code for binary operators have been
made, as well as changes in the way that branches following comparisons
are done.


Release 0.9.2

GETBYTE() and PUTBYTE() have been reimplemented, and should be more
efficient.


Release 0.9.1

We now support START(PARM), together with STACKBASE and STACKEND.
The programs in the "util" directory all build and execute.  An issue
with FINDOUTPUT() setting the executable bits of the created file has
been corrected.  And STOP(), FINISH, and just a return from START()
are handled more correctly.


Release 0.9.0

The runtime system has been rewritten from scratch, and now does
buffering of I/O (as it should have been doing).  This allows us to
implement UNRDCH(), which has been done.


Release 0.8.1

Some enhancements and corrections have been made to the compiler driver,
and some reorganization has been done to icint and its related files.
"SYSIN" and "SYSPRINT" (from IBM 360?) are no longer special in
FINDINPUT()/FINDOUTPUT(), and INPUT() and OUTPUT() routines have been
implemented and the compiler source adapted to make use of them.


Robert Nordier
www.nordier.com
